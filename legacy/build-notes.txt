03-25-2019

## Installing

```
sudo apt install pkg-config libxml2 libxml2-dev gcc g++ make automake autoconf binutils openssh-server openssl libssl-dev
sudo apt install zip unzip
```

The ".zip" file found in this directory is of the [branch named _hipv2_](https://bitbucket.org/openhip/openhip/overview) as of 2019-03-20.

## Building

```
unzip hip.zip
cd <hip-package>
./bootstrap.sh
./configure
make
```

---
##### error1.txt
This is pointing at DSA and RSA being deprecated

Deprecation points are in _/usr/include/openssl/_:

- rsa.h:193:1
- dsa.h:122:1

Jim has pointed out that the functions now have newer names:

```c
RSA_generate_key_ex()
DSA_generate_key_ex()
```

However the input parameters have changed to something newer that needs to be sorted out.
For RSA this is required as OpenHIP will not work without it.

Jim also poitned out that we need to change some make files around to have new flags:

```
-DOPENSSL_API_COMPAT=0x00908000L
```

This is only needed for DSA support.

---

### RSA Support

In _/usr/include/openssl/rsa.h_ on line 193:

```c
/* Deprecated version */
DEPRECATEDIN_0_9_8(RSA *RSA_generate_key(int bits, unsigned long e, void
                                         (*callback) (int, int, void *),
                                         void *cb_arg))
```

This simplifies to (by removing the DEPRECATED wrapper):

```c
RSA_generate_key(int bits, unsigned long e, void (*callback) (int, int, void *), void *cb_arg)
```

We can now map out argments to the old function call `RSA_generate_key(opts->bitsize, e, cb, stdout);` in OpenHIP:

Old OpenSSL Parameter | Old OpenHIP Parameter
--- | ---
int bits | opts->bitsize
unsigned long e | e
void (\*callback) (int, int, void *) | cb
void *cb_arg | stdout

Our new function call for RSA looks as follows:

```c
/* New version */
int RSA_generate_key_ex(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb);
```

New OpenSSL Parameter | Obvious OpenHIP Parameter
--- | ---
RSA *rsa | ???
int bits | opts->bitsize
BIGNUM *e | e
BN_GENCB *cb | ???

This leaves the OpenHIP parameters of `cb` and `stdout` from the old `void (*callback) (int, int, void *)` and `void *cb_arg` respectively.

The type `BN_GENCB` can found in _/usr/include/openssl/ossl_typ.h_:

```c
typedef struct bn_gencb_st BN_GENCB;
```

This has a base type of `bn_gencb_st` which according to [here](https://abi-laboratory.pro/index.php?view=type_view&l=openssl&v=1.0.2e&obj=c93f7&t=c7876) should be traced to _/usr/include/openssl/bn.h_.

However a search of this file along with `#include` files such as _e\_os2.h_, and _crypto.h_ came up with nothing.

Running `grep -rnw . -e 'bn_gencb_st'` while in _/usr/include/openssl/_ came up with a single hit. That is `./ossl_typ.h:85:typedef struct bn_gencb_st BN_GENCB;` which is not helpful.

---

To solve this we update the RSA case of the code to the following:

```c
    case HI_ALG_RSA:
      e = HIP_RSA_DFT_EXP;
      // rsa = RSA_generate_key(opts->bitsize, e, cb, stdout);
      int retRSA = RSA_generate_key_ex(rsa, opts->bitsize, e, cb);
      // if (!rsa)
      if (retRSA == 0)
        {
          // fprintf(stderr, "RSA_generate_key() failed.\n");
          fprintf(stderr, "RSA_generate_key_ex() failed.\n");
          exit(1);
        }
      break;
```

### DSA Support

```c
/* Deprecated version */
DEPRECATEDIN_0_9_8(DSA *DSA_generate_parameters(int bits,
                                                unsigned char *seed,
                                                int seed_len,
                                                int *counter_ret,
                                                unsigned long *h_ret, void
                                                 (*callback) (int, int,
                                                              void *),
                                                void *cb_arg))
```

```c
DSA *DSA_generate_parameters(int bits, unsigned char *seed, int seed_len, int *counter_ret, unsigned long *h_ret, void (*callback) (int, int, void *), void *cb_arg)
```

```c
dsa = DSA_generate_parameters(opts->bitsize, seed, sizeof(seed), NULL, NULL, cb, stdout);
```

Old OpenSSL Parameter | Old OpenHIP Parameter
--- | ---
int bits | opts->bitsize
unsigned char *seed | seed
int seed_len | sizeof(seed)
int *counter_ret | NULL
unsigned long *h_ret | NULL 
void (\*callback) (int, int, void *) | cb
void *cb_arg | stdout

```c
/* New version */
int DSA_generate_parameters_ex(DSA *dsa, int bits,
                               const unsigned char *seed, int seed_len,
                               int *counter_ret, unsigned long *h_ret,
                               BN_GENCB *cb);
```

New OpenSSL Parameter | Obvious OpenHIP Parameter
--- | ---
DSA *dsa | dsa
int bits | opts->bitsize
unsigned char *seed | seed
int seed_len | sizeof(seed)
int *counter_ret | NULL
unsigned long *h_ret | NULL 
BN_GENCB *cb | cb

We initially set cb parameter to NULL to avoid chaos into the openssl world.

================================================================================================================================

03-26-2019

NEW ERROR2.TXT

Siwtched "e" in hitgen.c to be BIGNUM

ERROR3.txt

"e" size isn't known?

---

RSA WORKS

https://github.com/openssl/openssl/blob/master/crypto/rsa/rsa_depr.c

What we did was take the function here named it my_RSA... and called that instead.
no version changes and RSA errors go away!

DSA CHANGE

https://github.com/openssl/openssl/blob/master/crypto/dsa/dsa_depr.c

Insert the function into hitgen.c

---

util/hitgen.c: In function ‘generate_HI’:
util/hitgen.c:275:65: error: dereferencing pointer to incomplete type ‘DSA {aka struct dsa_st}’
       xmlNewChild(hi, NULL, BAD_CAST "P", BAD_CAST BN_bn2hex(dsa->p));
                                                                 ^~
util/hitgen.c:284:65: error: dereferencing pointer to incomplete type ‘RSA {aka struct rsa_st}’
       xmlNewChild(hi, NULL, BAD_CAST "N", BAD_CAST BN_bn2hex(rsa->n));

We found that there are new functions to get these:

We changed the following section of hitgen.c:

```c
const BIGNUM *dsa_p, *dsa_q, *dsa_g, *dsa_pub_key, *dsa_priv_key;
  const BIGNUM *rsa_n, *rsa_e, *rsa_d, *rsa_p, *rsa_q, *rsa_dmp1, *rsa_dmq1, *rsa_iqmp;
  switch (opts->type)
    {
    case HI_ALG_DSA:
      DSA_get0_pqg(dsa, &dsa_p, &dsa_q, &dsa_g);
      xmlNewChild(hi, NULL, BAD_CAST "P", BAD_CAST BN_bn2hex(dsa_p));
      xmlNewChild(hi, NULL, BAD_CAST "Q", BAD_CAST BN_bn2hex(dsa_q));
      xmlNewChild(hi, NULL, BAD_CAST "G", BAD_CAST BN_bn2hex(dsa_g));
      DSA_get0_key(dsa, &dsa_pub_key, &dsa_priv_key);
      xmlNewChild(hi, NULL, BAD_CAST "PUB",
                  BAD_CAST BN_bn2hex(dsa_pub_key));
      xmlNewChild(hi, NULL,BAD_CAST "PRIV",
                  BAD_CAST BN_bn2hex(dsa_priv_key));
      break;
    case HI_ALG_RSA:
      RSA_get0_key(rsa, &rsa_n, &rsa_e, &rsa_d);
      xmlNewChild(hi, NULL, BAD_CAST "N", BAD_CAST BN_bn2hex(rsa_n));
      xmlNewChild(hi, NULL, BAD_CAST "E", BAD_CAST BN_bn2hex(rsa_e));
      xmlNewChild(hi, NULL, BAD_CAST "D", BAD_CAST BN_bn2hex(rsa_d));
      RSA_get0_factors(rsa, &rsa_p, &rsa_q);
      xmlNewChild(hi, NULL, BAD_CAST "P", BAD_CAST BN_bn2hex(rsa_p));
      xmlNewChild(hi, NULL, BAD_CAST "Q", BAD_CAST BN_bn2hex(rsa_q));
      RSA_get0_crt_params(rsa, &rsa_dmp1, &rsa_dmq1, &rsa_iqmp);
      xmlNewChild(hi, NULL, BAD_CAST "dmp1",
                  BAD_CAST BN_bn2hex(rsa_dmp1));
      xmlNewChild(hi, NULL, BAD_CAST "dmq1",
                  BAD_CAST BN_bn2hex(rsa_dmq1));
      xmlNewChild(hi, NULL, BAD_CAST "iqmp",
                  BAD_CAST BN_bn2hex(rsa_iqmp));
      break;

```

We added new vars for BIGNUM and the new function calls to grab the values.

---

error5.txt

Various changes through hip_util.c

We comment out the CRYPTO_malloc_init() - we dont know what this does and if its a good idea to do so

---

error6.txt

Renamed to DES...

---

error7.txt


---

error8.txt

---

error9.txt

---

error10.txt

commented out the log line, as not really needed?

---

error11.txt

changes to hip_output.c

----

error12.txt

changes to hip_xml.c

----

error13.txt

----

error14.txt

fixed by adding & to entry->ks[..]

----

error15.txt

when we comment out line 243 the error goes away?

removed -Werror from src/Makefile CFLAG declaration
-- > OH FUCK

---

error16.txt

changed des to DES everywhere

----

error17.txt

added & to entry->ks

----

IT BUILT!

finish build by running 'sudo make install'

now things are where they need to be!

==================================================================================================

03-27-2019

changed files:

src/util/
hip_util.c
hip_xml.c
hitgen.c

src/protocol/
hip_cache.c
hip_dht.c
hip_input.c
hip_output.c

src/include/hip/
hip_sadb.h

src/usermode/
hip_esp.c
hip_sadb.c

moved into ~/build-diff and zipped and sent to git today

